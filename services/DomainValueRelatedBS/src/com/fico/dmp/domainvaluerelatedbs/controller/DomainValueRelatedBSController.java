/**
 *This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.
 */
package com.fico.dmp.domainvaluerelatedbs.controller;

import com.fico.dmp.domainvaluerelatedbs.DomainValueRelatedBS;
import java.lang.Integer;
import java.lang.Object;
import org.springframework.http.ResponseEntity;
import com.fico.ps.model.DomainValueVO;
import java.lang.String;
import javax.servlet.http.HttpServletRequest;
import com.fico.dmp.telusagentuidb.models.query.QueryGetAllDomainValueWithOneParentResponse;
import java.util.List;
import com.fico.dmp.telusagentuidb.models.query.QueryGetAllDomainValuesTwoParentResponse;
import com.fico.dmp.telusagentuidb.models.query.QueryGetAllDomainValuesByDvTypeCodeResponse;
import java.lang.Boolean;
import com.fico.dmp.telusagentuidb.models.query.QueryGetAllDvsByDvtypeWithActiveFlagResponse;
import com.fico.dmp.domainvaluerelatedbs.DomainValueRelatedBS.CustomPageData_DVSearchFilters;
import com.fico.dmp.telusagentuidb.models.query.QueryGetDomainValueByCodeAndTypeCodeResponse;
import com.fico.dmp.telusagentuidb.models.query.QueryGetDvbyCodeAndTypeCodeWithActiveFlagResponse;
import com.fico.dmp.telusagentuidb.models.query.QueryGetDomainValueByIdResponse;
import com.fico.dmp.telusagentuidb.models.query.QueryGetDomainValueByIdWithActiveFlagResponse;
import com.fico.dmp.domainvaluerelatedbs.DomainValueRelatedBS.CustomPageData_DVTypeDescSearchFilters;
import org.springframework.web.bind.annotation.*;
import org.springframework.http.MediaType;
import org.springframework.beans.factory.annotation.Autowired;
import com.wordnik.swagger.annotations.Api;
import com.wordnik.swagger.annotations.ApiOperation;
import com.wordnik.swagger.annotations.ApiParam;
import com.wavemaker.tools.api.core.annotations.WMAccessVisibility;
import com.wavemaker.tools.api.core.models.AccessSpecifier;

@RestController
@RequestMapping(value = "/domainValueRelatedBS")
public class DomainValueRelatedBSController {

    @Autowired
    private DomainValueRelatedBS domainValueRelatedBS;

    @RequestMapping(value = "/activateDeactivateDVByIds", method = RequestMethod.POST)
    public ResponseEntity<Object> activateDeactivateDVByIds(@RequestParam(value = "isToActivate", required = false) boolean isToActivate, @RequestParam(value = "ids", required = false) Integer[] ids) {
        return domainValueRelatedBS.activateDeactivateDVByIds(isToActivate, ids);
    }

    @RequestMapping(value = "/domainValueCreateUpdate", method = RequestMethod.POST)
    public ResponseEntity<Object> domainValueCreateUpdate(@RequestBody DomainValueVO domainValueVO, @RequestParam(value = "defaultLocale", required = false) String defaultLocale, HttpServletRequest request) {
        return domainValueRelatedBS.domainValueCreateUpdate(domainValueVO, defaultLocale, request);
    }

    @RequestMapping(value = "/findDomainValueById", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "")
    public ResponseEntity<Object> findDomainValueById(@RequestParam(value = "domainValueId", required = false) Integer domainValueId, @RequestParam(value = "defaultLocale", required = false) String defaultLocale, HttpServletRequest request) {
        return domainValueRelatedBS.findDomainValueById(domainValueId, defaultLocale, request);
    }

    @RequestMapping(value = "/allDomainValueWithSingleParent", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "")
    public List<QueryGetAllDomainValueWithOneParentResponse> getAllDomainValueWithSingleParent(@RequestParam(value = "domainValueTypeCode", required = false) String domainValueTypeCode, @RequestParam(value = "userLocale", required = false) String userLocale, @RequestParam(value = "parent1DomainValueId", required = false) Integer parent1DomainValueId, @RequestParam(value = "dvDescription", required = false) String dvDescription) {
        return domainValueRelatedBS.getAllDomainValueWithSingleParent(domainValueTypeCode, userLocale, parent1DomainValueId, dvDescription);
    }

    @RequestMapping(value = "/allDomainValueWithTwoParent", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "")
    public List<QueryGetAllDomainValuesTwoParentResponse> getAllDomainValueWithTwoParent(@RequestParam(value = "domainValueTypeCode", required = false) String domainValueTypeCode, @RequestParam(value = "userLocale", required = false) String userLocale, @RequestParam(value = "parent1DomainValueId", required = false) Integer parent1DomainValueId, @RequestParam(value = "parent2DomainValueId", required = false) Integer parent2DomainValueId, @RequestParam(value = "dvDescription", required = false) String dvDescription) {
        return domainValueRelatedBS.getAllDomainValueWithTwoParent(domainValueTypeCode, userLocale, parent1DomainValueId, parent2DomainValueId, dvDescription);
    }

    @RequestMapping(value = "/allDomainValuesByTypeCode", method = RequestMethod.GET)
    public List<QueryGetAllDomainValuesByDvTypeCodeResponse> getAllDomainValuesByTypeCode(@RequestParam(value = "domainValueTypeCode", required = false) String domainValueTypeCode, @RequestParam(value = "userLocale", required = false) String userLocale, @RequestParam(value = "isAlphaSort", required = false) boolean isAlphaSort) {
        return domainValueRelatedBS.getAllDomainValuesByTypeCode(domainValueTypeCode, userLocale, isAlphaSort);
    }

    @RequestMapping(value = "/allDomainValuesByTypeCodeWithactiveFlag", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "")
    public List<QueryGetAllDvsByDvtypeWithActiveFlagResponse> getAllDomainValuesByTypeCodeWithActiveFlag(@RequestParam(value = "domainValueTypeCode", required = false) String domainValueTypeCode, @RequestParam(value = "userLocale", required = false) String userLocale, @RequestParam(value = "isActiveFlag", required = false) Boolean isActiveFlag, @RequestParam(value = "showAll", required = false) Boolean showAll) {
        return domainValueRelatedBS.getAllDomainValuesByTypeCodeWithActiveFlag(domainValueTypeCode, userLocale, isActiveFlag, showAll);
    }

    @RequestMapping(value = "/dVListByFilters", method = RequestMethod.POST)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "")
    public CustomPageData_DVSearchFilters getDVListByFilters(@RequestParam(value = "domainValueTypeId", required = false) Integer domainValueTypeId, @RequestParam(value = "showAll", required = false) Boolean showAll, @RequestParam(value = "isActiveFlag", required = false) Boolean isActiveFlag, @RequestParam(value = "searchValue", required = false) String searchValue, @RequestParam(value = "defaultLocale", required = false) String defaultLocale, @RequestParam(value = "currentPage", required = false) Integer currentPage, @RequestParam(value = "pageSize", required = false) Integer pageSize, @RequestParam(value = "sortOrders", required = false) String sortOrders) {
        return domainValueRelatedBS.getDVListByFilters(domainValueTypeId, showAll, isActiveFlag, searchValue, defaultLocale, currentPage, pageSize, sortOrders);
    }

    @RequestMapping(value = "/domainValueByCodeAndTypeCode", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "")
    public QueryGetDomainValueByCodeAndTypeCodeResponse getDomainValueByCodeAndTypeCode(@RequestParam(value = "domainValueCode", required = false) String domainValueCode, @RequestParam(value = "domainValueTypeCode", required = false) String domainValueTypeCode, @RequestParam(value = "userLocale", required = false) String userLocale) {
        return domainValueRelatedBS.getDomainValueByCodeAndTypeCode(domainValueCode, domainValueTypeCode, userLocale);
    }

    @RequestMapping(value = "/domainValueByCodeAndTypeCodeWithActiveFlag", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "")
    public QueryGetDvbyCodeAndTypeCodeWithActiveFlagResponse getDomainValueByCodeAndTypeCodeWithActiveFlag(@RequestParam(value = "domainValueCode", required = false) String domainValueCode, @RequestParam(value = "domainValueTypeCode", required = false) String domainValueTypeCode, @RequestParam(value = "userLocale", required = false) String userLocale, @RequestParam(value = "isActiveFlag", required = false) Boolean isActiveFlag, @RequestParam(value = "showAll", required = false) Boolean showAll) {
        return domainValueRelatedBS.getDomainValueByCodeAndTypeCodeWithActiveFlag(domainValueCode, domainValueTypeCode, userLocale, isActiveFlag, showAll);
    }

    @RequestMapping(value = "/domainValueBydomainValueId", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "")
    public QueryGetDomainValueByIdResponse getDomainValueByDomainValueId(@RequestParam(value = "domainValueId", required = false) Integer domainValueId, @RequestParam(value = "userLocale", required = false) String userLocale) {
        return domainValueRelatedBS.getDomainValueByDomainValueId(domainValueId, userLocale);
    }

    @RequestMapping(value = "/domainValueBydomainValueIdWithActiveFlag", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "")
    public QueryGetDomainValueByIdWithActiveFlagResponse getDomainValueByDomainValueIdWithActiveFlag(@RequestParam(value = "domainValueId", required = false) Integer domainValueId, @RequestParam(value = "userLocale", required = false) String userLocale, @RequestParam(value = "isActiveFlag", required = false) Boolean isActiveFlag, @RequestParam(value = "showAll", required = false) Boolean showAll) {
        return domainValueRelatedBS.getDomainValueByDomainValueIdWithActiveFlag(domainValueId, userLocale, isActiveFlag, showAll);
    }

    @RequestMapping(value = "/domainValueTypeBydescription", method = RequestMethod.POST)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @ApiOperation(value = "")
    public CustomPageData_DVTypeDescSearchFilters getDomainValueTypeByDescription(@RequestParam(value = "description", required = false) String description, @RequestParam(value = "currentPage", required = false) Integer currentPage, @RequestParam(value = "pageSize", required = false) Integer pageSize, @RequestParam(value = "sortOrders", required = false) String sortOrders) {
        return domainValueRelatedBS.getDomainValueTypeByDescription(description, currentPage, pageSize, sortOrders);
    }
}
