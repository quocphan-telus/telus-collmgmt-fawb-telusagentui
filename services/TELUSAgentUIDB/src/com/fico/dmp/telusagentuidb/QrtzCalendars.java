/*Copyright (c) 2020-2021 fico.com All Rights Reserved.
 This software is the confidential and proprietary information of fico.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with fico.com*/
package com.fico.dmp.telusagentuidb;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.Lob;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

/**
 * QrtzCalendars generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`QRTZ_CALENDARS`")
@IdClass(QrtzCalendarsId.class)
public class QrtzCalendars implements Serializable {


    private String schedName;

    private String calendarName;

    @JsonProperty(access = Access.READ_ONLY)
    private byte[] calendar;

    @Id
    @Column(name = "`SCHED_NAME`", nullable = false, length = 120)
    public String getSchedName() {
        return this.schedName;
    }

    public void setSchedName(String schedName) {
        this.schedName = schedName;
    }

    @Id
    @Column(name = "`CALENDAR_NAME`", nullable = false, length = 200)
    public String getCalendarName() {
        return this.calendarName;
    }

    public void setCalendarName(String calendarName) {
        this.calendarName = calendarName;
    }

    @Lob()
    @Column(name = "`CALENDAR`", nullable = false)
    public byte[] getCalendar() {
        return this.calendar;
    }

    public void setCalendar(byte[] calendar) {
        this.calendar = calendar;
    }




    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof QrtzCalendars)) return false;
        final QrtzCalendars qrtzCalendars = (QrtzCalendars) o;
        return Objects.equals(getSchedName(), qrtzCalendars.getSchedName()) &&
                Objects.equals(getCalendarName(), qrtzCalendars.getCalendarName());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getSchedName(),
                getCalendarName());
    }
}