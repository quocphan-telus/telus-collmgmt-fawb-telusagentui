/*Copyright (c) 2020-2021 fico.com All Rights Reserved.
 This software is the confidential and proprietary information of fico.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with fico.com*/
package com.fico.dmp.telusagentuidb;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * QueueGroup generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`QUEUE_GROUP`", indexes = {
            @Index(name = "`FK_QUEUE_GROUP_TO_GROUP_JjVRw`", columnList = "`GroupId`"),
            @Index(name = "`FK_QUEUE_GROUP_TO_QUEUE_dbyLa`", columnList = "`QueueId`")})
public class QueueGroup implements Serializable {


    private Integer id;

    private Integer queueId;

    private Integer groupId;

    private Queue queue;

    private Group _group;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`QueueId`", nullable = true, scale = 0, precision = 10)
    public Integer getQueueId() {
        return this.queueId;
    }

    public void setQueueId(Integer queueId) {
        this.queueId = queueId;
    }

    @Column(name = "`GroupId`", nullable = true, scale = 0, precision = 10)
    public Integer getGroupId() {
        return this.groupId;
    }

    public void setGroupId(Integer groupId) {
        this.groupId = groupId;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`QueueId`", referencedColumnName = "`ID`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_QUEUE_GROUP_TO_QUEUE_dbyLa`"))
    @Fetch(FetchMode.JOIN)
    public Queue getQueue() {
        return this.queue;
    }

    public void setQueue(Queue queue) {
        if(queue != null) {
            this.queueId = queue.getId();
        }

        this.queue = queue;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`GroupId`", referencedColumnName = "`id`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_QUEUE_GROUP_TO_GROUP_JjVRw`"))
    @Fetch(FetchMode.JOIN)
    public Group get_group() {
        return this._group;
    }

    public void set_group(Group _group) {
        if(_group != null) {
            this.groupId = _group.getId();
        }

        this._group = _group;
    }



    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof QueueGroup)) return false;
        final QueueGroup queueGroup = (QueueGroup) o;
        return Objects.equals(getId(), queueGroup.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}