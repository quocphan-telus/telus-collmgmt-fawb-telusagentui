/*Copyright (c) 2020-2021 fico.com All Rights Reserved.
 This software is the confidential and proprietary information of fico.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with fico.com*/
package com.fico.dmp.telusagentuidb;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.sql.Timestamp;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * AuditDataChange generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`AuditDataChange`", indexes = {
            @Index(name = "`FK_AuditDataChange_TO_UStqOQc`", columnList = "`createdBy`"),
            @Index(name = "`FK_AuditDataChange_TO_AP6sJqn`", columnList = "`applicationId`")})
public class AuditDataChange implements Serializable {


    private Integer id;

    private Integer applicationId;

    private String action;

    private String domainClassName;

    private String entityName;

    private Integer entityId;

    private String parentDomainClassName;

    private String parentEntityName;

    private Integer parentEntityId;

    private String changeData;

    private Integer createdBy;

    private Timestamp createdOn;

    private Application application;

    private User user;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`applicationId`", nullable = true, scale = 0, precision = 10)
    public Integer getApplicationId() {
        return this.applicationId;
    }

    public void setApplicationId(Integer applicationId) {
        this.applicationId = applicationId;
    }

    @Column(name = "`action`", nullable = true, length = 255)
    public String getAction() {
        return this.action;
    }

    public void setAction(String action) {
        this.action = action;
    }

    @Column(name = "`domainClassName`", nullable = true, length = 255)
    public String getDomainClassName() {
        return this.domainClassName;
    }

    public void setDomainClassName(String domainClassName) {
        this.domainClassName = domainClassName;
    }

    @Column(name = "`entityName`", nullable = true, length = 255)
    public String getEntityName() {
        return this.entityName;
    }

    public void setEntityName(String entityName) {
        this.entityName = entityName;
    }

    @Column(name = "`entityId`", nullable = true, scale = 0, precision = 10)
    public Integer getEntityId() {
        return this.entityId;
    }

    public void setEntityId(Integer entityId) {
        this.entityId = entityId;
    }

    @Column(name = "`parentDomainClassName`", nullable = true, length = 255)
    public String getParentDomainClassName() {
        return this.parentDomainClassName;
    }

    public void setParentDomainClassName(String parentDomainClassName) {
        this.parentDomainClassName = parentDomainClassName;
    }

    @Column(name = "`parentEntityName`", nullable = true, length = 255)
    public String getParentEntityName() {
        return this.parentEntityName;
    }

    public void setParentEntityName(String parentEntityName) {
        this.parentEntityName = parentEntityName;
    }

    @Column(name = "`parentEntityId`", nullable = true, scale = 0, precision = 10)
    public Integer getParentEntityId() {
        return this.parentEntityId;
    }

    public void setParentEntityId(Integer parentEntityId) {
        this.parentEntityId = parentEntityId;
    }

    @Column(name = "`changeData`", nullable = true, length = 2147483647)
    public String getChangeData() {
        return this.changeData;
    }

    public void setChangeData(String changeData) {
        this.changeData = changeData;
    }

    @Column(name = "`createdBy`", nullable = true, scale = 0, precision = 10)
    public Integer getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(Integer createdBy) {
        this.createdBy = createdBy;
    }

    @Column(name = "`createdOn`", nullable = true)
    public Timestamp getCreatedOn() {
        return this.createdOn;
    }

    public void setCreatedOn(Timestamp createdOn) {
        this.createdOn = createdOn;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`applicationId`", referencedColumnName = "`id`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_AuditDataChange_TO_AP6sJqn`"))
    @Fetch(FetchMode.JOIN)
    public Application getApplication() {
        return this.application;
    }

    public void setApplication(Application application) {
        if(application != null) {
            this.applicationId = application.getId();
        }

        this.application = application;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`createdBy`", referencedColumnName = "`id`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_AuditDataChange_TO_UStqOQc`"))
    @Fetch(FetchMode.JOIN)
    public User getUser() {
        return this.user;
    }

    public void setUser(User user) {
        if(user != null) {
            this.createdBy = user.getId();
        }

        this.user = user;
    }



    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof AuditDataChange)) return false;
        final AuditDataChange auditDataChange = (AuditDataChange) o;
        return Objects.equals(getId(), auditDataChange.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}