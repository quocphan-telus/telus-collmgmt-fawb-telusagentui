/*Copyright (c) 2020-2021 fico.com All Rights Reserved.
 This software is the confidential and proprietary information of fico.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with fico.com*/
package com.fico.dmp.telusagentuidb;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * RolePermission generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`ROLE_PERMISSION`", indexes = {
            @Index(name = "`FK_ROLE_PERMISSION_TO_ROH20mB`", columnList = "`RoleId`"),
            @Index(name = "`FK_ROLE_PERMISSION_TO_PEsLD72`", columnList = "`PermissionId`")})
public class RolePermission implements Serializable {


    private Integer id;

    private Integer roleId;

    private Integer permissionId;

    private Permission permission;

    private Role role;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`RoleId`", nullable = true, scale = 0, precision = 10)
    public Integer getRoleId() {
        return this.roleId;
    }

    public void setRoleId(Integer roleId) {
        this.roleId = roleId;
    }

    @Column(name = "`PermissionId`", nullable = true, scale = 0, precision = 10)
    public Integer getPermissionId() {
        return this.permissionId;
    }

    public void setPermissionId(Integer permissionId) {
        this.permissionId = permissionId;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`PermissionId`", referencedColumnName = "`ID`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_ROLE_PERMISSION_TO_PEsLD72`"))
    @Fetch(FetchMode.JOIN)
    public Permission getPermission() {
        return this.permission;
    }

    public void setPermission(Permission permission) {
        if(permission != null) {
            this.permissionId = permission.getId();
        }

        this.permission = permission;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`RoleId`", referencedColumnName = "`id`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_ROLE_PERMISSION_TO_ROH20mB`"))
    @Fetch(FetchMode.JOIN)
    public Role getRole() {
        return this.role;
    }

    public void setRole(Role role) {
        if(role != null) {
            this.roleId = role.getId();
        }

        this.role = role;
    }



    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof RolePermission)) return false;
        final RolePermission rolePermission = (RolePermission) o;
        return Objects.equals(getId(), rolePermission.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}