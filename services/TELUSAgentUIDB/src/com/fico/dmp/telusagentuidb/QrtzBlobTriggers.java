/*Copyright (c) 2020-2021 fico.com All Rights Reserved.
 This software is the confidential and proprietary information of fico.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with fico.com*/
package com.fico.dmp.telusagentuidb;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.Lob;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;

/**
 * QrtzBlobTriggers generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`QRTZ_BLOB_TRIGGERS`")
@IdClass(QrtzBlobTriggersId.class)
public class QrtzBlobTriggers implements Serializable {


    private String schedName;

    private String triggerName;

    private String triggerGroup;

    @JsonProperty(access = Access.READ_ONLY)
    private byte[] blobData;

    @Id
    @Column(name = "`SCHED_NAME`", nullable = false, length = 120)
    public String getSchedName() {
        return this.schedName;
    }

    public void setSchedName(String schedName) {
        this.schedName = schedName;
    }

    @Id
    @Column(name = "`TRIGGER_NAME`", nullable = false, length = 200)
    public String getTriggerName() {
        return this.triggerName;
    }

    public void setTriggerName(String triggerName) {
        this.triggerName = triggerName;
    }

    @Id
    @Column(name = "`TRIGGER_GROUP`", nullable = false, length = 200)
    public String getTriggerGroup() {
        return this.triggerGroup;
    }

    public void setTriggerGroup(String triggerGroup) {
        this.triggerGroup = triggerGroup;
    }

    @Lob()
    @Column(name = "`BLOB_DATA`", nullable = true)
    public byte[] getBlobData() {
        return this.blobData;
    }

    public void setBlobData(byte[] blobData) {
        this.blobData = blobData;
    }




    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof QrtzBlobTriggers)) return false;
        final QrtzBlobTriggers qrtzBlobTriggers = (QrtzBlobTriggers) o;
        return Objects.equals(getSchedName(), qrtzBlobTriggers.getSchedName()) &&
                Objects.equals(getTriggerName(), qrtzBlobTriggers.getTriggerName()) &&
                Objects.equals(getTriggerGroup(), qrtzBlobTriggers.getTriggerGroup());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getSchedName(),
                getTriggerName(),
                getTriggerGroup());
    }
}